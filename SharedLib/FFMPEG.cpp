#include "stdafx.h"
#include "FFMPEG.h"

PACKET::PACKET()
{
	av_init_packet(&packet);
	packet.data = nullptr;
	packet.size = 0;
}
//*///------------------------------------------------------------------------------------------
PACKET::PACKET(size_t sz)
{
	if (sz > 0)
		av_new_packet(&packet, sz);
	else
	{
		av_init_packet(&packet);
		packet.data = nullptr;
		packet.size = 0;
	}
}
//*///------------------------------------------------------------------------------------------
PACKET::~PACKET()
{
	Free();
}
//*///------------------------------------------------------------------------------------------
AVPacket* PACKET::Get()
{
	return &packet;
}
//*///------------------------------------------------------------------------------------------
int PACKET::Size()
{
	return packet.size;
}
//*///------------------------------------------------------------------------------------------
uint8_t* PACKET::Data()
{
	return packet.data;
}
//*///------------------------------------------------------------------------------------------
void PACKET::Free()
{
	av_free_packet(&packet);
}
//*///------------------------------------------------------------------------------------------
void PACKET::MakeSize(int n)
{
	packet.size = n;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
FRAME::FRAME()
{
	frame = av_frame_alloc();
	empty = false;
}
//*///------------------------------------------------------------------------------------------
FRAME::FRAME(bool a)
{
	frame = av_frame_alloc();
	empty = true;
}
//*///------------------------------------------------------------------------------------------
FRAME::~FRAME()
{
	av_frame_free(&frame);
}
//*///------------------------------------------------------------------------------------------
AVFrame* FRAME::Get()
{
	return frame;
}
//*///------------------------------------------------------------------------------------------
void FRAME::Free()
{
	av_frame_free(&frame);
}
//*///------------------------------------------------------------------------------------------
bool FRAME::Empty()
{
	return empty;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------