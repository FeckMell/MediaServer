#pragma once
#include "stdafx.h"
#include "Logs.h"

class SOCK
{
public:
	//SOCK(string, int, IO&);
	SOCK(string, int, SHP_IO);

	void ChangeIO(SHP_IO);
	~SOCK();

	SHP_IO io;
	boost::asio::ip::udp::socket s;
};
typedef shared_ptr<SOCK> SHP_SOCK;
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
struct REQUEST
{
	EP sender;
	char data[2048];
};
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
struct RTP
{
	/* первый байт */
	uint8_t csrc_len : 4;//
	uint8_t extension : 1;//
	uint8_t padding : 1;//
	uint8_t version : 2;//
	/* второй байт */
	uint8_t payload_type : 7;//
	uint8_t marker : 1;//
	/* третий-четвертый байты */
	uint16_t seq_no;
	/* пятый-восьмой байты */
	uint32_t timestamp;//
	/* девятый-двенадцатый байт */
	uint32_t ssrc;//
};
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
struct RTP_struct
{
	RTP header;
	long TS;
	int amount;

	RTP_struct();
	void Config();
	RTP Get();
};
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
struct Data
{
	uint8_t data[1000];
	int size = 160;
};
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------